version: '3.9'
services:  
  mlflow-server:
    build: ./mlflow-server
    image: mlflow-server
    container_name: mlflow-server
    ports:
     - "5000:5000"
    labels:
      - "traefik.http.routers.mlflow-server.rule=Host(`mlflow.localhost`)"
    depends_on:
      - minio-s3
      - db
    command: >
      mlflow server 
      --backend-store-uri mysql+pymysql://root:password@db:3306/mlflow
      --serve-artifacts
      --host 0.0.0.0
      --gunicorn-opts "--log-level debug"
      --default-artifact-root http://mlflowproxy.localhost/api/2.0/mlflow-artifacts/artifacts/experiments
    # --default-artifact-root http://localhost:5500/api/2.0/mlflow-artifacts/artifacts/experiments
    # --default-artifact-root http://mlflow-artifact-proxy:5500/api/2.0/mlflow-artifacts/artifacts/experiments

  mlflow-artifact-proxy:
    build: ./mlflow-server
    image: mlflow-server
    container_name: mlflow-artifact-proxy
    expose:
      - "5500"
    ports:
     - "5500:5500"
    environment:
      MLFLOW_S3_ENDPOINT_URL: http://minio-s3:9000
      AWS_ACCESS_KEY_ID: "user"
      AWS_SECRET_ACCESS_KEY: "password"
      MLFLOW_S3_IGNORE_TLS: true  # Use this if minio is configured with using SSL self-signed or signed using some internal-only CA certificate
    labels:
      - "traefik.http.routers.mlflow-artifact-proxy.rule=Host(`mlflowproxy.localhost`)"
    command: >
      mlflow server
      --host 0.0.0.0
      --port 5500
      --artifacts-destination s3://mlflow
      --artifacts-only
      --gunicorn-opts "--log-level debug"

  db:
    image: mysql:8.0
    container_name: mysql
    ports:
      - "3306:3306"
      - "33060:33060"
    environment:
      MYSQL_ROOT_PASSWORD: password
      MYSQL_USER: user
      MYSQL_PASSWORD: password
      MYSQL_DATABASE: mlflow
    volumes:
      - ./mysql-data:/var/lib/mysql
        
  minio-s3:
  # TODO: Do health check?
    image: minio/minio
    container_name: minio-s3
    ports:
      - "9000:9000"
      - "9090:9090"
      - "9001:9001" 
    environment:
      MINIO_ROOT_USER: root
      MINIO_ROOT_PASSWORD: password
    volumes:
      - ./s3-data:/data
    labels:
      - "traefik.http.routers.minio-s3.rule=Host(`minio.localhost`)"
    command: server --console-address ":9001" /data

  # Application Dashboard
  heimdall:
    image: linuxserver/heimdall
    container_name: heimdall
    ports:
      - "8081:80"
      - "443:443"
    environment:
      PGID: 1000
      PUID: 1000
      TZ: Europe/London
    labels:
      - "traefik.http.routers.heimdall.rule=Host(`heimdall.localhost`)"
      - "traefik.http.services.heimdall.loadbalancer.server.port=80"
    volumes:
      - ./heimdall:/config

  reverse-proxy:
    image: traefik:v2.9
    # Enables the web UI and tells Traefik to listen to docker
    command: --api.insecure=true --providers.docker
    ports:
      - "80:80"
      - "8080:8080" # Web UI
    labels:
      - "traefik.http.routers.reverse-proxy.rule=Host(`traefik.localhost`)"
      - "traefik.http.services.reverse-proxy.loadbalancer.server.port=8080"
    volumes:
      # So that Traefik can listen to the Docker events
      - /var/run/docker.sock:/var/run/docker.sock

volumes:
  mysql-data:
  s3-data:
  heimdall:

networks:
  loki: