version: '3.9'
services:  
  mlflow-server:
    build: ./mlflow-server
    image: mlflow-server
    container_name: mlflow-server
    ports:
     - "5000:5000"
    depends_on:
      - minio-s3
      - db
    command: >
      mlflow server 
      --backend-store-uri mysql+pymysql://root:password@db:3306/mlflow
      --serve-artifacts
      --host 0.0.0.0
      --gunicorn-opts "--log-level debug"
      --default-artifact-root http://localhost:5500/api/2.0/mlflow-artifacts/artifacts/experiments
    # --default-artifact-root http://mlflow-artifact-server:5500/api/2.0/mlflow-artifacts/artifacts/experiments

  mlflow-artifact-server:
    build: ./mlflow-server
    image: mlflow-server
    container_name: mlflow-artifact-server
    expose:
      - "5500"
    ports:
     - "5500:5500"
    environment:
      MLFLOW_S3_ENDPOINT_URL: http://minio-s3:9000
      AWS_ACCESS_KEY_ID: "user"
      AWS_SECRET_ACCESS_KEY: "password"
      MLFLOW_S3_IGNORE_TLS: true  # Use this if minio is configured with using SSL self-signed or signed using some internal-only CA certificate
    command: >
      mlflow server
      --host 0.0.0.0
      --port 5500
      --artifacts-destination s3://mlflow
      --artifacts-only
      --gunicorn-opts "--log-level debug"

  db:
    image: mysql:8.0
    container_name: mysql
    ports:
      - "3306:3306"
      - "33060:33060"
    environment:
      MYSQL_ROOT_PASSWORD: password
      MYSQL_USER: user
      MYSQL_PASSWORD: password
      MYSQL_DATABASE: mlflow
    volumes:
      - ./mysql-data:/var/lib/mysql
        
  minio-s3:
  # TODO: Do health check?
    image: minio/minio
    container_name: minio-s3
    ports:
      - "9000:9000"
      - "9090:9090"
      - "9001:9001" 
    environment:
      MINIO_ROOT_USER: root
      MINIO_ROOT_PASSWORD: password
    volumes:
      - ./s3-data:/data
    command: server --console-address ":9001" /data

volumes:
  mysql-data:
  s3-data:

