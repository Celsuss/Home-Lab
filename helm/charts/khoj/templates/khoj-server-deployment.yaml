---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: {{ include "khoj.fullname" . }}-server
  namespace: {{ .Values.namespace }}
  labels:
    {{- include "khoj.labels" . | nindent 4 }}
    app.kubernetes.io/component: server
spec:
  replicas: {{.Values.replicaCount }}
  selector:
    matchLabels:
      {{- include "khoj.selectorLabels" . | nindent 6 }}
      app.kubernetes.io/component: server
  template:
    metadata:
      labels:
        {{- include "khoj.selectorLabels" . | nindent 8 }}
        app.kubernetes.io/component: server
    spec:
      containers:
        - name: khoj
          image: "{{.Values.khoj.image.repository }}:{{.Values.khoj.image.tag }}"
          imagePullPolicy: {{.Values.khoj.image.pullPolicy }}
          # command: ["python3", "-m", "uvicorn"]
          # args: [
          #   "khoj.main:app",
          #   "--host", "0.0.0.0",
          #   "--port", {{ .Values.khoj.service.port | quote }}
          # ]
          command: ["/bin/sh", "-c"]
          args:
            - |
              # Wait for the database to be ready (optional but good practice)
              # while ! pg_isready -h "{{ include "khoj.fullname" . }}-postgres" -p "5432" -U "{{ .Values.postgres.user }}"; do
              #   echo "Waiting for postgres..."
              #   sleep 2
              # done

              # Run Django migrations
              echo "Running database migrations..."
              python src/khoj/manage.py migrate --noinput

              # Start the Uvicorn server
              echo "Starting Khoj server..."
              uvicorn khoj.main:app --host 0.0.0.0 --port {{ .Values.khoj.service.port }}
          ports:
            - name: http
              containerPort: {{.Values.khoj.service.port }}
              protocol: TCP
          env:
            - name: KHOJ_DOMAIN
              value: {{.Values.khoj.config.KHOJ_DOMAIN | quote }}
            # - name: KHOJ_HOST
            #   value: "0.0.0.0"
            # - name: KHOJ_PORT
            #   value: {{ .Values.khoj.service.port | quote }}
            - name: KHOJ_NO_HTTPS
              value: {{.Values.khoj.config.KHOJ_NO_HTTPS | quote }}
            - name: OPENAI_BASE_URL
              value: {{.Values.khoj.config.OPENAI_BASE_URL | quote }}
            - name: POSTGRES_HOST
              value: "{{ include "khoj.fullname" . }}-postgres"
            - name: REDIS_HOST
              value: "{{ include "khoj.fullname" . }}-redis"
            - name: SEARXNG_HOST
              value: "http://{{ include "khoj.fullname" . }}-searxng:{{.Values.searxng.service.port }}"
            - name: KHOJ_CODE_EXECUTION_HOST
              value: "http://{{ include "khoj.fullname" . }}-terrarium:{{.Values.terrarium.service.port }}"
            - name: KHOJ_ADMIN_EMAIL
              value: {{ .Values.khoj.config.KHOJ_ADMIN_EMAIL }}
            - name: KHOJ_ADMIN_PASSWORD
              valueFrom:
                secretKeyRef:
                  name: {{.Values.secrets.name }}
                  key: KHOJ_ADMIN_PASSWORD
            - name: KHOJ_DJANGO_SECRET_KEY
              valueFrom:
                secretKeyRef:
                  name: {{.Values.secrets.name }}
                  key: KHOJ_DJANGO_SECRET_KEY
            - name: POSTGRES_USER
              value: {{ .Values.postgres.user | quote }}
            - name: POSTGRES_DB
              value: {{ .Values.postgres.database | quote }}
            - name: POSTGRES_PASSWORD
              valueFrom:
                secretKeyRef:
                  name: {{.Values.secrets.name }}
                  key: POSTGRES_PASSWORD

          {{- if.Values.khoj.gpu.enabled }}
          resources:
            limits:
              nvidia.com/gpu: {{.Values.khoj.gpu.count }}
          {{- end }}
          volumeMounts:
            - name: data
              mountPath: /data
      volumes:
        - name: data
        {{- if.Values.khoj.persistence.enabled }}
          persistentVolumeClaim:
            claimName: {{ include "khoj.fullname" . }}-server-pvc
        {{- else }}
          emptyDir: {}
        {{- end }}
