---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: {{ include "khoj.fullname" . }}-server
  namespace: {{ .Values.namespace }}
  labels:
    {{- include "khoj.labels" . | nindent 4 }}
    app.kubernetes.io/component: server
spec:
  replicas: {{.Values.replicaCount }}
  selector:
    matchLabels:
      {{- include "khoj.selectorLabels" . | nindent 6 }}
      app.kubernetes.io/component: server
  template:
    metadata:
      labels:
        {{- include "khoj.selectorLabels" . | nindent 8 }}
        app.kubernetes.io/component: server
    spec:
      initContainers:
        - name: khoj-setup
          image: "{{ .Values.khoj.image.repository }}:{{ .Values.khoj.image.tag }}"
          imagePullPolicy: {{ .Values.khoj.image.pullPolicy }}
          command: ["/bin/sh", "-c"]
          args:
            - |
              # Step 1: Wait for the database using pg_isready.
              # while ! pg_isready -h "{{ include "khoj.fullname" . }}-postgres" -p "5432" -U "{{ .Values.postgres.user }}"; do
              #   echo "Waiting for postgres..."
              #   sleep 2
              # done

              # Step 2: Build the frontend UI.
              echo "Building frontend..."
              cd src/khoj/interface
              npm install
              npm run build
              cd /app

              # Step 3: Run database migrations.
              echo "Running migrations..."
              python src/khoj/manage.py migrate

              # Step 4: Collect all static files (including the newly built UI).
              echo "Collecting static files..."
              python src/khoj/manage.py collectstatic --noinput
          # The init container needs database credentials.
          env:
            - name: POSTGRES_HOST
              value: "{{ include "khoj.fullname" . }}-postgres"
            - name: POSTGRES_USER
              value: {{ .Values.postgres.user | quote }}
            - name: POSTGRES_DB
              value: {{ .Values.postgres.database | quote }}
            - name: POSTGRES_PASSWORD
              valueFrom:
                secretKeyRef:
                  name: {{ .Values.secrets.name }}
                  key: POSTGRES_PASSWORD
          # It also needs the data volume to place the static files.
          volumeMounts:
            - name: data
              mountPath: /data
      containers:
        - name: khoj
          image: "{{.Values.khoj.image.repository }}:{{.Values.khoj.image.tag }}"
          imagePullPolicy: {{.Values.khoj.image.pullPolicy }}
          command: ["python", "src/khoj/manage.py", "runserver", "0.0.0.0:{{ .Values.khoj.service.port }}"]

          # command: ["/bin/sh", "-c"]
          # args:
          #   - |
          #     echo "Waiting for database to be ready..."
          #     python3 src/khoj/manage.py wait_for_database -s 60

          #     echo "Running database migrations..."
          #     python3 src/khoj/manage.py migrate

          #     echo "Collecting static files..."
          #     python3 src/khoj/manage.py collectstatic --noinput

          #     echo "Starting Django server on port {{ .Values.khoj.service.port }}..."
          #     python3 src/khoj/manage.py runserver 0.0.0.0:{{ .Values.khoj.service.port }}

          ports:
            - name: http
              containerPort: {{.Values.khoj.service.port }}
              protocol: TCP
          env:
            - name: KHOJ_DOMAIN
              value: {{.Values.khoj.config.KHOJ_DOMAIN | quote }}
            # - name: HOST
            #   value: "0.0.0.0"
            # - name: PORT
            #   value: {{ .Values.khoj.service.port | quote }}
            - name: KHOJ_NO_HTTPS
              value: {{.Values.khoj.config.KHOJ_NO_HTTPS | quote }}
            - name: OPENAI_BASE_URL
              value: {{.Values.khoj.config.OPENAI_BASE_URL | quote }}
            - name: POSTGRES_HOST
              value: "{{ include "khoj.fullname" . }}-postgres"
            - name: REDIS_HOST
              value: "{{ include "khoj.fullname" . }}-redis"
            - name: SEARXNG_HOST
              value: "http://{{ include "khoj.fullname" . }}-searxng:{{.Values.searxng.service.port }}"
            - name: KHOJ_CODE_EXECUTION_HOST
              value: "http://{{ include "khoj.fullname" . }}-terrarium:{{.Values.terrarium.service.port }}"
            - name: KHOJ_ADMIN_EMAIL
              value: {{ .Values.khoj.config.KHOJ_ADMIN_EMAIL }}
            - name: KHOJ_ADMIN_PASSWORD
              valueFrom:
                secretKeyRef:
                  name: {{.Values.secrets.name }}
                  key: KHOJ_ADMIN_PASSWORD
            - name: KHOJ_DJANGO_SECRET_KEY
              valueFrom:
                secretKeyRef:
                  name: {{.Values.secrets.name }}
                  key: KHOJ_DJANGO_SECRET_KEY
            - name: POSTGRES_USER
              value: {{ .Values.postgres.user | quote }}
            - name: POSTGRES_DB
              value: {{ .Values.postgres.database | quote }}
            - name: POSTGRES_PASSWORD
              valueFrom:
                secretKeyRef:
                  name: {{.Values.secrets.name }}
                  key: POSTGRES_PASSWORD

          {{- if.Values.khoj.gpu.enabled }}
          resources:
            limits:
              nvidia.com/gpu: {{.Values.khoj.gpu.count }}
          {{- end }}
          volumeMounts:
            - name: data
              mountPath: /data
      volumes:
        - name: data
        {{- if.Values.khoj.persistence.enabled }}
          persistentVolumeClaim:
            claimName: {{ include "khoj.fullname" . }}-server-pvc
        {{- else }}
          emptyDir: {}
        {{- end }}
